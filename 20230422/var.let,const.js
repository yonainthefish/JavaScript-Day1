// 지난 번엔 var를 사용하여 안되었음. 근데 let으로 바꾸니까 됨 왜ㅔ???

const balls = document.querySelectorAll(".ball")
var myArray5 = [1,2,3,4,5,6,7];

for (var i = 0; i < balls.length; i++) {
    balls[i].onclick = function () {
      let num = prompt('번호를 입력해주세요');
      alert(num + '번호가 입력되었습니다!');
      console.log(balls[i],i)
      balls[i].innerHTML = num;
    }
}

// var, let, const 의 차이를 알아보자
// 중복선언 가능, 변수,  구식입니다. 

//var a = 10이라고 했는데 누가 밑에서 변경 
//var a = "바꿔버리기"를 실행함. 
//만줄짜리 코드임 이 코드는 9887번째 

//let은 바꿀 수 있는 것 
//const는 바꿀 수 없는 것 
// 이 친구들은 두번 선언 못함, 그리고 신세대임 ! 

// 기초반이지만 고급이 하고 싶옹.
// var 특 : 함수의 코드블럭 아니면 전역임 
// let, const특 : 코드블럭 내에서 만들어지고 사라짐 


//var는 전역번수로 00하기 때문에 변수를 기억한다. 
//let은 전역변수가 아니기에 실행 후 변수를 제거한다. 그럼? 다음에 어떻게
// 가져오나요? - > let은 함수 내로 변수를 가지고 온다. 그래서 코드블럭 내에서
// 00길이 만큼 개별적으로 가지고 있어서 기억하고 변수를 가져온다. 

// let은 사라진 변수를 함수내로 가져와서 함수가 바뀐 i를 기억합니다. 
// 내부적으로 공간을 기억합니다. 각각 다른 변수를 i=0, i=1... 이런식으로
// 기억합니다. 각자, 격리되어있습니다. 다른말로 문닫고 들어감 closer..
//함수가 자기방으로 들어갔네? 격리 되었네 ? closer. 


//문제를 발견하고 해결하는 것 조금 더 나은 방법으로 개선하는 것 

